/*------------------------------------------------------
 * アニメーションリスト
 *------------------------------------------------------*/

/*---------------------------
 * スライド
 * @param $translate3d_x X軸でどの方向から表示させるか調整
 * @param $translate3d_y Y軸でどの方向から表示させるか調整
 * @param $s アニメーション表示間隔秒数
 * @param $cubic_bezier_s ペジェ曲線のアニメーション表示間隔秒数
 *---------------------------*/
@mixin slide_appear(
  $translate3d_x: 0,
  $translate3d_y: 60px,
  $s: 0.8s,
  $cubic_bezier_s: 0.5s
) {
  overflow: hidden;

  .animation_inner {
    transform: translate3d($translate3d_x, $translate3d_y, 0);
    will-change: transform;
    display: block;
  }

  &.in_view {
    .animation_inner {
      transition: $s cubic-bezier(0.075, 0.82, 0.165, 1) $cubic_bezier_s;
      transform: translate3d(0, 0, 0);
      will-change: transform;
    }
  }
}

/*---------------------------
 * フェード
 * @param $translate3d_x X軸でどの方向から表示させるか調整
 * @param $translate3d_y Y軸でどの方向から表示させるか調整
 * @param $s アニメーション表示間隔秒数
 * @param $cubic_bezier_s ペジェ曲線のアニメーション表示間隔秒数
 *---------------------------*/
@mixin fade_appear(
  $translate3d_x: 0,
  $translate3d_y: 60px,
  $s: 0.7s,
  $cubic_bezier_s: 0.3s
) {
  opacity: 0;
  transform: translate3d($translate3d_x, $translate3d_y, 0);
  will-change: transform;

  &.in_view {
    opacity: 1;
    transition: $s cubic-bezier(0.165, 0.84, 0.44, 1) $cubic_bezier_s;
    transform: translate3d(0, 0, 0);
    will-change: transform;
  }
}

/*---------------------------
 * 背景色が流れる
 * @param $bg_color 背景色
 * @param $bg_direction 背景色：流れる方向
 * @param $elem_translate3d_x 要素：X軸でどの方向から表示させるか調整
 * @param $elem_translate3d_y 要素：Y軸でどの方向から表示させるか調整
 * @param $duration アニメーション表示間隔秒数
 *---------------------------*/
@mixin flow_bg(
  $bg_color: #ccc,
  $bg_direction: left,
  $elem_translate3d_x: -15%,
  $elem_translate3d_y: 0,
  $duration: 1.2s
) {
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: $bg_color;
    transform: scaleX(0);
  }

  .animation_inner {
    opacity: 0;
    display: block;
  }

  &.in_view {
    &::before {
      animation-name: bg_extend;
      animation-duration: $duration;
      animation-timing-function: cubic-bezier(0.35, 1.24, 0.9, 0.77);
      animation-fill-mode: forwards;
    }

    .animation_inner {
      animation-name: slide_to_right;
      animation-duration: $duration/2.5;
      animation-delay: $duration/3;
      animation-fill-mode: forwards;
    }
  }

  $bg_direction_opposite: left;
  @if $bg_direction == left {
    $bg_direction_opposite: right;
  }

  @keyframes bg_extend {
    0% {
      transform-origin: $bg_direction;
      transform: scaleX(0);
    }
    50% {
      transform-origin: $bg_direction;
      transform: scaleX(1);
    }
    50.001% {
      transform-origin: $bg_direction_opposite;
    }
    100% {
      transform-origin: $bg_direction_opposite;
      transform: scaleX(0);
    }
  }

  @keyframes slide_to_right {
    0% {
      transform: translate3d($elem_translate3d_x, $elem_translate3d_y, 0);
      opacity: 1;
    }
    100% {
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }
}

/*------------------------------------------------------
 * 各デモ要素
 *------------------------------------------------------*/
main {
  .sec_demo {
    margin-bottom: 1500px;
    padding: 30px 0;
    border-top: 1px solid #000;
    border-bottom: 1px solid #000;
  }
}

.area_demo1 {
  .area_demo_ttl {
    font-size: 28px;
    font-weight: bold;
    margin-bottom: 8px;

    @include slide_appear;
  }

  .area_demo_body {
    @include fade_appear;

    p {
      &:not(:last-child) {
        margin-bottom: 15px;
      }
    }
  }
}

.area_demo2 {
  .area_demo_ttl {
    font-size: 28px;
    font-weight: bold;
    margin-bottom: 8px;

    @include flow_bg;
  }
  .area_demo_body {
    @include flow_bg;

    p {
      &:not(:last-child) {
        margin-bottom: 15px;
      }
    }
  }
}
